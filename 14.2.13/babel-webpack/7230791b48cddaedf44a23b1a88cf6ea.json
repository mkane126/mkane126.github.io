{"ast":null,"code":"import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n/**\n * The {@link lastDayOfWeek} function options.\n */\n\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone unless a context is specified.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The last day of a week\n */\n\nexport function lastDayOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n\n  const _date = toDate(date, options?.in);\n\n  const day = _date.getDay();\n\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setHours(0, 0, 0, 0);\n\n  _date.setDate(_date.getDate() + diff);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default lastDayOfWeek;","map":{"version":3,"names":["getDefaultOptions","toDate","lastDayOfWeek","date","options","defaultOptions","weekStartsOn","locale","_date","in","day","getDay","diff","setHours","setDate","getDate"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/lastDayOfWeek.js"],"sourcesContent":["import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link lastDayOfWeek} function options.\n */\n\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone unless a context is specified.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The last day of a week\n */\nexport function lastDayOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setHours(0, 0, 0, 0);\n  _date.setDate(_date.getDate() + diff);\n\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default lastDayOfWeek;\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,0BAAlC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsC;EAC3C,MAAMC,cAAc,GAAGL,iBAAiB,EAAxC;EACA,MAAMM,YAAY,GAChBF,OAAO,EAAEE,YAAT,IACAF,OAAO,EAAEG,MAAT,EAAiBH,OAAjB,EAA0BE,YAD1B,IAEAD,cAAc,CAACC,YAFf,IAGAD,cAAc,CAACE,MAAf,EAAuBH,OAAvB,EAAgCE,YAHhC,IAIA,CALF;;EAOA,MAAME,KAAK,GAAGP,MAAM,CAACE,IAAD,EAAOC,OAAO,EAAEK,EAAhB,CAApB;;EACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,EAAZ;;EACA,MAAMC,IAAI,GAAG,CAACF,GAAG,GAAGJ,YAAN,GAAqB,CAAC,CAAtB,GAA0B,CAA3B,IAAgC,CAAhC,IAAqCI,GAAG,GAAGJ,YAA3C,CAAb;;EAEAE,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;;EACAL,KAAK,CAACM,OAAN,CAAcN,KAAK,CAACO,OAAN,KAAkBH,IAAhC;;EAEA,OAAOJ,KAAP;AACD,C,CAED;;AACA,eAAeN,aAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}