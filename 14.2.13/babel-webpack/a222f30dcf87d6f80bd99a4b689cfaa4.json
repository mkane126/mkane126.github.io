{"ast":null,"code":"import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears.js\";\nimport { subISOWeekYears } from \"./subISOWeekYears.js\";\n/**\n * The {@link differenceInISOWeekYears} function options.\n */\n\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options\n *\n * @returns The number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * const result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * // => 1\n */\n\nexport function differenceInISOWeekYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(options?.in, laterDate, earlierDate);\n  const sign = compareAsc(laterDate_, earlierDate_);\n  const diff = Math.abs(differenceInCalendarISOWeekYears(laterDate_, earlierDate_, options));\n  const adjustedDate = subISOWeekYears(laterDate_, sign * diff, options);\n  const isLastISOWeekYearNotFull = Number(compareAsc(adjustedDate, earlierDate_) === -sign);\n  const result = sign * (diff - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n} // Fallback for modularized imports:\n\nexport default differenceInISOWeekYears;","map":{"version":3,"names":["normalizeDates","compareAsc","differenceInCalendarISOWeekYears","subISOWeekYears","differenceInISOWeekYears","laterDate","earlierDate","options","laterDate_","earlierDate_","in","sign","diff","Math","abs","adjustedDate","isLastISOWeekYearNotFull","Number","result"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/differenceInISOWeekYears.js"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears.js\";\nimport { subISOWeekYears } from \"./subISOWeekYears.js\";\n\n/**\n * The {@link differenceInISOWeekYears} function options.\n */\n\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options\n *\n * @returns The number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * const result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * // => 1\n */\nexport function differenceInISOWeekYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(laterDate_, earlierDate_);\n  const diff = Math.abs(\n    differenceInCalendarISOWeekYears(laterDate_, earlierDate_, options),\n  );\n\n  const adjustedDate = subISOWeekYears(laterDate_, sign * diff, options);\n\n  const isLastISOWeekYearNotFull = Number(\n    compareAsc(adjustedDate, earlierDate_) === -sign,\n  );\n  const result = sign * (diff - isLastISOWeekYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInISOWeekYears;\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,0BAA/B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,gCAAT,QAAiD,uCAAjD;AACA,SAASC,eAAT,QAAgC,sBAAhC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,SAAlC,EAA6CC,WAA7C,EAA0DC,OAA1D,EAAmE;EACxE,MAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BT,cAAc,CAC/CO,OAAO,EAAEG,EADsC,EAE/CL,SAF+C,EAG/CC,WAH+C,CAAjD;EAMA,MAAMK,IAAI,GAAGV,UAAU,CAACO,UAAD,EAAaC,YAAb,CAAvB;EACA,MAAMG,IAAI,GAAGC,IAAI,CAACC,GAAL,CACXZ,gCAAgC,CAACM,UAAD,EAAaC,YAAb,EAA2BF,OAA3B,CADrB,CAAb;EAIA,MAAMQ,YAAY,GAAGZ,eAAe,CAACK,UAAD,EAAaG,IAAI,GAAGC,IAApB,EAA0BL,OAA1B,CAApC;EAEA,MAAMS,wBAAwB,GAAGC,MAAM,CACrChB,UAAU,CAACc,YAAD,EAAeN,YAAf,CAAV,KAA2C,CAACE,IADP,CAAvC;EAGA,MAAMO,MAAM,GAAGP,IAAI,IAAIC,IAAI,GAAGI,wBAAX,CAAnB,CAjBwE,CAmBxE;;EACA,OAAOE,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD,C,CAED;;AACA,eAAed,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}