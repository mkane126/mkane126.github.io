{"ast":null,"code":"import { toDate } from \"./toDate.js\";\n/**\n * The {@link lastDayOfMonth} function options.\n */\n\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport function lastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n\n  const month = _date.getMonth();\n\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n\n  _date.setHours(0, 0, 0, 0);\n\n  return toDate(_date, options?.in);\n} // Fallback for modularized imports:\n\nexport default lastDayOfMonth;","map":{"version":3,"names":["toDate","lastDayOfMonth","date","options","_date","in","month","getMonth","setFullYear","getFullYear","setHours"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/lastDayOfMonth.js"],"sourcesContent":["import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link lastDayOfMonth} function options.\n */\n\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport function lastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(0, 0, 0, 0);\n  return toDate(_date, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default lastDayOfMonth;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,aAAvB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;EAC5C,MAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAD,EAAOC,OAAO,EAAEE,EAAhB,CAApB;;EACA,MAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAd;;EACAH,KAAK,CAACI,WAAN,CAAkBJ,KAAK,CAACK,WAAN,EAAlB,EAAuCH,KAAK,GAAG,CAA/C,EAAkD,CAAlD;;EACAF,KAAK,CAACM,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;;EACA,OAAOV,MAAM,CAACI,KAAD,EAAQD,OAAO,EAAEE,EAAjB,CAAb;AACD,C,CAED;;AACA,eAAeJ,cAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}