{"ast":null,"code":"import { toDate } from \"./toDate.js\";\n/**\n * The {@link isTuesday} function options.\n */\n\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * const result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport function isTuesday(date, options) {\n  return toDate(date, options?.in).getDay() === 2;\n} // Fallback for modularized imports:\n\nexport default isTuesday;","map":{"version":3,"names":["toDate","isTuesday","date","options","in","getDay"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/isTuesday.js"],"sourcesContent":["import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link isTuesday} function options.\n */\n\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * const result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nexport function isTuesday(date, options) {\n  return toDate(date, options?.in).getDay() === 2;\n}\n\n// Fallback for modularized imports:\nexport default isTuesday;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,aAAvB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;EACvC,OAAOH,MAAM,CAACE,IAAD,EAAOC,OAAO,EAAEC,EAAhB,CAAN,CAA0BC,MAA1B,OAAuC,CAA9C;AACD,C,CAED;;AACA,eAAeJ,SAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}