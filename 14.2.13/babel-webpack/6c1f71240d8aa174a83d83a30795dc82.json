{"ast":null,"code":"import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\nconst TIMEZONE_UNIT_PRIORITY = 10;\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n\n}\nexport class ValueSetter extends Setter {\n  constructor(value, validateValue, setValue, priority, subPriority) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n\n}\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n\n    this.context = context || (date => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n\n}","map":{"version":3,"names":["constructFrom","transpose","TIMEZONE_UNIT_PRIORITY","Setter","subPriority","validate","_utcDate","_options","ValueSetter","constructor","value","validateValue","setValue","priority","date","options","set","flags","DateTimezoneSetter","context","reference","timestampIsSet"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/parse/_lib/Setter.js"],"sourcesContent":["import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,sBAAsB,GAAG,EAA/B;AAEA,OAAO,MAAMC,MAAN,CAAa;EAClBC,WAAW,GAAG,CAAH;;EAEXC,QAAQ,CAACC,QAAD,EAAWC,QAAX,EAAqB;IAC3B,OAAO,IAAP;EACD;;AALiB;AAQpB,OAAO,MAAMC,WAAN,SAA0BL,MAA1B,CAAiC;EACtCM,WAAW,CACTC,KADS,EAGTC,aAHS,EAKTC,QALS,EAOTC,QAPS,EAQTT,WARS,EAST;IACA;IACA,KAAKM,KAAL,GAAaA,KAAb;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;;IACA,IAAIT,WAAJ,EAAiB;MACf,KAAKA,WAAL,GAAmBA,WAAnB;IACD;EACF;;EAEDC,QAAQ,CAACS,IAAD,EAAOC,OAAP,EAAgB;IACtB,OAAO,KAAKJ,aAAL,CAAmBG,IAAnB,EAAyB,KAAKJ,KAA9B,EAAqCK,OAArC,CAAP;EACD;;EAEDC,GAAG,CAACF,IAAD,EAAOG,KAAP,EAAcF,OAAd,EAAuB;IACxB,OAAO,KAAKH,QAAL,CAAcE,IAAd,EAAoBG,KAApB,EAA2B,KAAKP,KAAhC,EAAuCK,OAAvC,CAAP;EACD;;AA3BqC;AA8BxC,OAAO,MAAMG,kBAAN,SAAiCf,MAAjC,CAAwC;EAC7CU,QAAQ,GAAGX,sBAAH;EACRE,WAAW,GAAG,CAAC,CAAJ;;EAEXK,WAAW,CAACU,OAAD,EAAUC,SAAV,EAAqB;IAC9B;;IACA,KAAKD,OAAL,GAAeA,OAAO,KAAML,IAAD,IAAUd,aAAa,CAACoB,SAAD,EAAYN,IAAZ,CAA5B,CAAtB;EACD;;EAEDE,GAAG,CAACF,IAAD,EAAOG,KAAP,EAAc;IACf,IAAIA,KAAK,CAACI,cAAV,EAA0B,OAAOP,IAAP;IAC1B,OAAOd,aAAa,CAACc,IAAD,EAAOb,SAAS,CAACa,IAAD,EAAO,KAAKK,OAAZ,CAAhB,CAApB;EACD;;AAZ4C","ignoreList":[]},"metadata":{},"sourceType":"module"}