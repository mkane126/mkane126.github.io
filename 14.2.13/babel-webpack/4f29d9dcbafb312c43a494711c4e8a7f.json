{"ast":null,"code":"import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n\n  const year = _date.getFullYear();\n\n  const monthIndex = _date.getMonth();\n\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n} // Fallback for modularized imports:\n\nexport default getDaysInMonth;","map":{"version":3,"names":["constructFrom","toDate","getDaysInMonth","date","options","_date","in","year","getFullYear","monthIndex","getMonth","lastDayOfMonth","setFullYear","setHours","getDate"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/getDaysInMonth.js"],"sourcesContent":["import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const monthIndex = _date.getMonth();\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDaysInMonth;\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;EAC5C,MAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAD,EAAOC,OAAO,EAAEE,EAAhB,CAApB;;EACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAb;;EACA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,QAAN,EAAnB;;EACA,MAAMC,cAAc,GAAGX,aAAa,CAACK,KAAD,EAAQ,CAAR,CAApC;EACAM,cAAc,CAACC,WAAf,CAA2BL,IAA3B,EAAiCE,UAAU,GAAG,CAA9C,EAAiD,CAAjD;EACAE,cAAc,CAACE,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC;EACA,OAAOF,cAAc,CAACG,OAAf,EAAP;AACD,C,CAED;;AACA,eAAeZ,cAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}