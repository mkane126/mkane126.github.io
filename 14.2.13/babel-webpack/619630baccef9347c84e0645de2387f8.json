{"ast":null,"code":"import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\"; // Local week of year\n\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n\n      case \"wo\":\n        return match.ordinalNumber(dateString, {\n          unit: \"week\"\n        });\n\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\"y\", \"R\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"I\", \"d\", \"D\", \"i\", \"t\", \"T\"];\n}","map":{"version":3,"names":["setWeek","startOfWeek","numericPatterns","Parser","parseNDigits","parseNumericPattern","LocalWeekParser","priority","parse","dateString","token","match","week","ordinalNumber","unit","length","validate","_date","value","set","date","_flags","options","incompatibleTokens"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js"],"sourcesContent":["import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,aAAlD,C,CAEA;;AACA,OAAO,MAAMC,eAAN,SAA8BH,MAA9B,CAAqC;EAC1CI,QAAQ,GAAG,GAAH;;EAERC,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;QACE,OAAOL,mBAAmB,CAACH,eAAe,CAACU,IAAjB,EAAuBH,UAAvB,CAA1B;;MACF,KAAK,IAAL;QACE,OAAOE,KAAK,CAACE,aAAN,CAAoBJ,UAApB,EAAgC;UAAEK,IAAI,EAAE;QAAR,CAAhC,CAAP;;MACF;QACE,OAAOV,YAAY,CAACM,KAAK,CAACK,MAAP,EAAeN,UAAf,CAAnB;IANJ;EAQD;;EAEDO,QAAQ,CAACC,KAAD,EAAQC,KAAR,EAAe;IACrB,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;EACD;;EAEDC,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeH,KAAf,EAAsBI,OAAtB,EAA+B;IAChC,OAAOrB,WAAW,CAACD,OAAO,CAACoB,IAAD,EAAOF,KAAP,EAAcI,OAAd,CAAR,EAAgCA,OAAhC,CAAlB;EACD;;EAEDC,kBAAkB,GAAG,CACnB,GADmB,EAEnB,GAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,GALmB,EAMnB,GANmB,EAOnB,GAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,GAVmB,EAWnB,GAXmB,EAYnB,GAZmB,EAanB,GAbmB,CAAH;AAtBwB","ignoreList":[]},"metadata":{},"sourceType":"module"}