{"ast":null,"code":"import { constructFrom } from \"./constructFrom.js\";\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\n\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor) ? new constructor(0) : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return typeof constructor === \"function\" && constructor.prototype?.constructor === constructor;\n} // Fallback for modularized imports:\n\n\nexport default transpose;","map":{"version":3,"names":["constructFrom","transpose","date","constructor","date_","isConstructor","setFullYear","getFullYear","getMonth","getDate","setHours","getHours","getMinutes","getSeconds","getMilliseconds","prototype"],"sources":["C:/Users/mkane/Downloads/NFLPredictions/nfl-predictions/node_modules/date-fns/transpose.js"],"sourcesContent":["import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,WAAzB,EAAsC;EAC3C,MAAMC,KAAK,GAAGC,aAAa,CAACF,WAAD,CAAb,GACV,IAAIA,WAAJ,CAAgB,CAAhB,CADU,GAEVH,aAAa,CAACG,WAAD,EAAc,CAAd,CAFjB;EAGAC,KAAK,CAACE,WAAN,CAAkBJ,IAAI,CAACK,WAAL,EAAlB,EAAsCL,IAAI,CAACM,QAAL,EAAtC,EAAuDN,IAAI,CAACO,OAAL,EAAvD;EACAL,KAAK,CAACM,QAAN,CACER,IAAI,CAACS,QAAL,EADF,EAEET,IAAI,CAACU,UAAL,EAFF,EAGEV,IAAI,CAACW,UAAL,EAHF,EAIEX,IAAI,CAACY,eAAL,EAJF;EAMA,OAAOV,KAAP;AACD;;AAED,SAASC,aAAT,CAAuBF,WAAvB,EAAoC;EAClC,OACE,OAAOA,WAAP,KAAuB,UAAvB,IACAA,WAAW,CAACY,SAAZ,EAAuBZ,WAAvB,KAAuCA,WAFzC;AAID,C,CAED;;;AACA,eAAeF,SAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}